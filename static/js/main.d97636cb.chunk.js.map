{"version":3,"sources":["assets/placeHolderImage.svg","assets/theBeerStoreLogo.svg","assets/filterIcon.svg","components/header/Logo.js","components/header/Header.js","components/productDisplay/ProductCard.js","components/productDisplay/HighlightedProducts.js","components/productDisplay/OtherProducts.js","components/productDisplay/ProductSection.js","components/productDisplay/SortSection.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Logo","goBackToHomePage","className","onClick","src","TheBeerStoreLogo","alt","Header","toggleSortSection","FilterIcon","addDefaultSrc","e","target","PlaceHolderImage","ProductCard","product","key","product_id","onError","image_url","name","brewer","type","price","size","abv","HighlightedProducts","highlightedProductsData","length","map","index","OtherProducts","trimmedData","otherProductsData","slice","ProductSection","organizeAndRenderProducts","productsToDisplay","displaySortedProducts","filter","productInfo","highlightedProductsList","includes","unsortedHiglightedProducts","sortPrimaryHighlitedProduct","renderProducts","arr","primaryProducts","secondaryProducts","item","push","state","productData","this","props","Component","SortSection","handleSubmit","preventDefault","userQuery","handleSort","handleClick","setState","value","onSubmit","htmlFor","id","onChange","checked","sortPriceLow","a","b","parseFloat","sortPriceHigh","sortABVLow","sortABVHigh","App","getFromBeerstoreAPI","querySpec","query","fetch","proxy","response","json","data","filterForLowestQuantity","listOfProducts","lowestPrice","forEach","productBeerId","beer_id","toString","Object","values","updateProductsToDisplay","displayQuery","oldData","beerstoreProducts","sortedData","sort","displaySortSection","then","lowestQuantityProducts","catch","err","alert","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d97636cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeHolderImage.1182456c.svg\";","module.exports = __webpack_public_path__ + \"static/media/theBeerStoreLogo.ec55f38e.svg\";","module.exports = __webpack_public_path__ + \"static/media/filterIcon.1ed01802.svg\";","import React from 'react';\nimport TheBeerStoreLogo from '../../assets/theBeerStoreLogo.svg'\n\nconst Logo = ({ goBackToHomePage }) => {\n  return (\n    <div className=\"logo\" onClick={goBackToHomePage}>\n      <img src={TheBeerStoreLogo} alt=\"The Beer Store Logo\" />\n    </div>\n  )\n}\n\nexport default Logo;","import React from 'react';\nimport Logo from './Logo';\nimport FilterIcon from '../../assets/filterIcon.svg'\n\n\nconst Header = ({ toggleSortSection, goBackToHomePage }) => {\n\n  return (\n    <div className=\"headerContainer\">\n      <div className=\"headerInfo wrapper\">\n        <button className='filterBtn' onClick={toggleSortSection}>\n          <img src={FilterIcon} alt=\"filter icon\" />\n        </button>\n        <Logo goBackToHomePage={goBackToHomePage} />\n      </div>\n    </div>\n  )\n}\n\nexport default Header;","import React from 'react';\nimport PlaceHolderImage from '../../assets/placeHolderImage.svg'\n\nconst addDefaultSrc = (e) => {\n  e.target.src = PlaceHolderImage;\n}\n\nconst ProductCard = ({ product }) => {\n  return (\n    <>\n      <div className=\"productImageContainer\" key={product.product_id}>\n        <img onError={addDefaultSrc} src={product.image_url} alt={product.name + ' picture'} className=\"primaryProductImage\" />\n      </div>\n      <div className=\"productInfoContainer\">\n        <div className=\"basicProductInfo\">\n          <h2>{product.name}</h2>\n          <p className='productBrewer'>{product.brewer}</p>\n        </div>\n        <div className=\"detailedProductInfo\">\n          <div className=\"otherProductInfo\">\n            <p className='productType'>{product.type}</p>\n            <p><span className='productCurrency'>$</span> <span className='productPrice'>{product.price}</span></p>\n          </div>\n          <div className=\"sizeAndABVProductInfo\">\n            <p className='productSizeandABV'>{product.size} &middot; {product.abv}% ABV</p>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default ProductCard;\n\n","import React from 'react';\nimport PlaceHolderImage from '../../assets/placeHolderImage.svg'\nimport ProductCard from './ProductCard'\n\nconst addDefaultSrc = (e) => {\n  e.target.src = PlaceHolderImage;\n}\n\nconst HighlightedProducts = ({ highlightedProductsData }) => {\n  if (highlightedProductsData.length) {\n    return (\n      <>\n        {highlightedProductsData.map((product, index) => {\n          if (index === 0) {\n            return (\n              <div className=\"primaryProductCard productCard\" key={product.product_id}>\n                <div className=\"primaryProductImageContainer\">\n                  <img src={product.image_url} onError={addDefaultSrc} alt={product.name + ' picture'} className=\"primaryProductImage\" />\n                </div>\n                <div className=\"primaryProductInfoContainer\">\n                  <div className=\"basicProductInfo\">\n                    <h2>{product.name}</h2>\n                    <p className='productBrewer'>{product.brewer}</p>\n                  </div>\n                  <div className=\"primaryDetailedProductInfo\">\n                    <div className=\"primaryOtherProductInfo\">\n                      <p className='productType'>{product.type}</p>\n                      <p className='productSizeandABV'>{product.size} &middot; {product.abv}% ABV</p>\n                    </div>\n                    <div className=\"priceProductInfo\">\n                      <p><span className='productCurrency'>$</span> <span className='productPrice'>{product.price}</span></p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )\n          }\n          return null\n        })}\n        <div className=\"secondaryProductCardContainer\">\n          {highlightedProductsData.map((product, index) => {\n            if (index !== 0) {\n              return (\n                <div className=\"secondaryProductCard productCard\" key={product.product_id}>\n                  <ProductCard product={product} />\n                </div>\n              )\n            }\n            return null\n          })}\n        </div>\n      </>\n    )\n  }\n  else {\n    return \"\";\n  }\n\n}\n\nexport default HighlightedProducts;\n","import React from 'react';\nimport ProductCard from './ProductCard';\n\nconst OtherProducts = ({ otherProductsData }) => {\n  const trimmedData = otherProductsData.slice(0, 9);\n  return (\n    <div className='tertiaryProductCardContainer'>\n      {trimmedData.map((product) => {\n        return (\n          <div className='tertiaryProductCard productCard' key={product.product_id}>\n            <ProductCard product={product} />\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default OtherProducts;","import React, { Component } from 'react';\nimport highlightedProductsList from '../../highlightedProducts'\nimport HighlightedProducts from './HighlightedProducts';\nimport OtherProducts from './OtherProducts';\n\nclass ProductSection extends Component {\n  constructor() {\n    super()\n    this.state = {\n      productData: []\n    }\n  }\n\n  organizeAndRenderProducts = (productsToDisplay, displaySortedProducts) => {\n    if (!displaySortedProducts) {\n      const otherProductsData = productsToDisplay.filter((productInfo) => !(highlightedProductsList.includes(productInfo.product_id)))\n      const unsortedHiglightedProducts = productsToDisplay.filter((productInfo) => highlightedProductsList.includes(productInfo.product_id))\n      const highlightedProductsData = this.sortPrimaryHighlitedProduct(unsortedHiglightedProducts)\n      return this.renderProducts(otherProductsData, displaySortedProducts, highlightedProductsData)\n    }\n    else if (displaySortedProducts) {\n      return this.renderProducts(productsToDisplay, displaySortedProducts)\n    }\n  }\n\n  sortPrimaryHighlitedProduct = (arr) => {\n    let primaryProducts = [];\n    let secondaryProducts = arr.filter(item => {\n      if (item.product_id === highlightedProductsList[0]) {\n        primaryProducts.push(item)\n        return false\n      }\n      return true\n    })\n    return [...primaryProducts, ...secondaryProducts]\n  }\n\n  renderProducts = (otherProductsData, displaySortedProducts, highlightedProductsData) => {\n    return (\n      <div className=\"productDisplayContainer wrapper\">\n        {!displaySortedProducts && <HighlightedProducts highlightedProductsData={highlightedProductsData} />}\n        <OtherProducts otherProductsData={otherProductsData} />\n      </div>\n    )\n  }\n\n\n  render() {\n    const { displaySortedProducts, productsToDisplay } = this.props;\n    return (\n      <>\n        {productsToDisplay.length\n          ? this.organizeAndRenderProducts(productsToDisplay, displaySortedProducts)\n          : <div><h1>loading...</h1></div>}\n      </>\n    )\n\n  }\n}\n\nexport default ProductSection;\n\n\n","import React, { Component } from 'react'\n\nclass SortSection extends Component {\n  constructor() {\n    super()\n    this.state = {\n      userQuery: '',\n    }\n  }\n\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.userQuery !== '') {\n      this.props.handleSort(this.state.userQuery)\n    }\n  }\n\n  handleClick = (e) => {\n    this.setState({\n      userQuery: e.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div className='wrapper'>\n        <div className='productCard'>\n          <h2>Sort By:</h2>\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"sortInputContainer\">\n              <label htmlFor=\"sortPriceLow\">Price: Lowest</label>\n              <input type=\"radio\" id=\"sortPriceLow\" name=\"sort\" value=\"PriceLow\" onChange={this.handleClick} checked={this.state.userQuery === \"PriceLow\"} />\n            </div>\n            <div className=\"sortInputContainer\">\n              <label htmlFor='sortPriceHigh'>Price: Highest</label>\n              <input type='radio' id='sortPriceHigh' name='sort' value='PriceHigh' onChange={this.handleClick} checked={this.state.userQuery === 'PriceHigh'} />\n            </div>\n            <div className='sortInputContainer'>\n              <label htmlFor='sortABVLow'>ABV: Lowest</label>\n              <input type='radio' id='sortABVLow' name='sort' value='ABVLow' onChange={this.handleClick} checked={this.state.userQuery === 'ABVLow'} />\n            </div>\n            <div className='sortInputContainer'>\n              <label htmlFor='sortABVHigh'>ABV: Highest</label>\n              <input type='radio' id='sortABVHigh' name='sort' value='ABVHigh' onChange={this.handleClick} checked={this.state.userQuery === 'ABVHigh'} />\n            </div>\n            <button className='sortButton'>Enter</button>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SortSection\n\n\n// checked={this.state.sortValue === 'lowPriceFirst'}\n// checked = { this.state.userQuery }","import React, { Component } from 'react';\nimport Header from './components/header/Header';\nimport ProductSection from './components/productDisplay/ProductSection';\nimport SortSection from './components/productDisplay/SortSection';\nimport './App.css';\n\n// Helper functions\nconst sortPriceLow = (a, b) => {\n  return parseFloat(a.price) - parseFloat(b.price)\n}\nconst sortPriceHigh = (a, b) => {\n  return parseFloat(b.price) - parseFloat(a.price)\n}\nconst sortABVLow = (a, b) => {\n  return parseFloat(a.abv) - parseFloat(b.abv)\n}\nconst sortABVHigh = (a, b) => {\n  return parseFloat(b.abv) - parseFloat(a.abv)\n}\n\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      beerstoreProducts: [],\n      productsToDisplay: [],\n      displaySortedProducts: false,\n      displaySortSection: false\n    }\n  }\n\n\n  // Inital API call and filtering away product duplicates ******************************************\n  componentDidMount() {\n    this.getFromBeerstoreAPI('products')\n      .then(data => {\n        const lowestQuantityProducts = this.filterForLowestQuantity(data);\n        this.setState({\n          beerstoreProducts: lowestQuantityProducts\n        })\n        this.updateProductsToDisplay('homepage')\n      })\n      .catch(err => {\n        alert(err, \"try again later\");\n        this.setState({\n          beerstoreProducts: false,\n        })\n      })\n  }\n  getFromBeerstoreAPI = async (querySpec) => {\n    const baseUrl = 'http://ontariobeerapi.ca/'\n    const proxy = 'https://cors-anywhere.herokuapp.com/'\n    const query = querySpec;\n    const response = await fetch(proxy + baseUrl + query);\n    const data = await response.json(); //.json is a promise, so we need await\n    return data;\n  }\n  filterForLowestQuantity = (listOfProducts) => {\n    const lowestPrice = {};\n    listOfProducts.forEach((productInfo) => {\n      const productBeerId = productInfo.beer_id.toString();\n      if (!(productBeerId in lowestPrice)) {\n        lowestPrice[productBeerId] = productInfo;\n      }\n      else if (productBeerId in lowestPrice) {\n        if (+lowestPrice[productBeerId].price > productInfo.price) {\n          lowestPrice[productBeerId] = productInfo;\n        }\n      }\n    })\n    return Object.values(lowestPrice)\n  }\n\n  // controls WHAT products To Display aka productsToDisplay ******************************************\n  updateProductsToDisplay = (displayQuery) => {\n    const oldData = [...this.state.beerstoreProducts]\n    let sortedData = []\n\n    if (displayQuery === 'homepage') {\n      this.setState({\n        productsToDisplay: oldData,\n        displaySortedProducts: false,\n      })\n    } else {\n      if (displayQuery === 'PriceLow') {\n        sortedData = oldData.sort(sortPriceLow)\n      }\n      else if (displayQuery === 'PriceHigh') {\n        sortedData = oldData.sort(sortPriceHigh)\n      }\n      else if (displayQuery === 'ABVLow') {\n        sortedData = oldData.sort(sortABVLow)\n      }\n      else if (displayQuery === 'ABVHigh') {\n        sortedData = oldData.sort(sortABVHigh)\n      }\n      this.setState({\n        productsToDisplay: sortedData,\n        displaySortedProducts: true,\n      })\n    }\n  }\n\n  // SORTING helper Functions ******************************************\n  toggleSortSection = () => {\n    this.setState({\n      displaySortSection: !this.state.displaySortSection\n    })\n  }\n\n  handleSort = (query) => {\n    this.setState({\n      displaySortSection: false,\n    })\n    this.updateProductsToDisplay(query)\n  }\n\n  goBackToHomePage = () => {\n    this.updateProductsToDisplay('homepage')\n    this.setState({\n      displaySortSection: false\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"body\">\n        <Header\n          toggleSortSection={this.toggleSortSection}\n          goBackToHomePage={this.goBackToHomePage} />\n        {this.state.displaySortSection\n          ? <SortSection handleSort={this.handleSort} />\n          : null}\n\n        <ProductSection\n          productsToDisplay={this.state.productsToDisplay}\n          displaySortedProducts={this.state.displaySortedProducts}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}