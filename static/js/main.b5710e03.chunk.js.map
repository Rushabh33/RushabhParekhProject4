{"version":3,"sources":["assets/theBeerStoreLogo.svg","assets/filterIcon.svg","assets/searchIcon.svg","assets/placeHolderImage.svg","components/Logo.js","components/NavBar.js","components/Header.js","components/PageBanner.js","utilityFunctions.js","components/ToggleFilter.js","components/SortOptions.js","components/SortSection.js","components/FilterSection.js","components/ProductCard.js","components/ProductDisplay.js","components/ProductSection.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Logo","className","src","theBeerStoreLogo","alt","NavBar","Header","PageBanner","toggleClassList","element","console","log","classList","toggle","ToggleFilter","productList","filterSectionContainer","filterSection","onClick","document","getElementsByClassName","querySelector","FilterIcon","SortOptions","props","htmlFor","name","id","onChange","e","handleSortandFilter","target","value","selected","disabled","hidden","SortSection","FilterSection","clearSearchValue","getElementById","handleChange","userQuery","choosenOption","getElementsByName","parentElement","Boolean","state","oldCheckedElement","setState","handleSubmit","preventDefault","handleSearchChange","onSubmit","this","type","placeholder","searchIcon","Component","ProductCard","productInfo","lessDisplayed","key","product_id","onError","placeHolderImage","addDefaultSrc","PlaceHolderImage","image_url","brewer","price","size","abv","ProductDisplay","listOfDisplayedProducts","data","map","item","length","displayedData","ProductSection","getTheBeerStoreData","querySpec","a","fetch","proxy","response","json","refineTheBeerStoreData","refinedData","reduce","acc","currentBeerId","beer_id","toString","Object","values","includes","updateDisplayedData","userOrganizedData","query","dataSource","dataToDisplay","split","resetDisplayedProducts","sortedData","sortDisplayedDataAscending","setUserOrganizedAndDisplayedData","sortDisplayedDataDecending","modifiedUserQuery","slice","join","filteredData","filterDisplayedData","searchQuery","shift","filter","toLowerCase","indexOfFirstDisplayedProduct","sort","b","nameA","toUpperCase","nameB","productsPerPage","originalData","then","App","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b5710e03.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/theBeerStoreLogo.b011b918.svg\";","module.exports = __webpack_public_path__ + \"static/media/filterIcon.1ed01802.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.2ea4c436.svg\";","module.exports = __webpack_public_path__ + \"static/media/placeHolderImage.1182456c.svg\";","import React from 'react';\nimport theBeerStoreLogo from '../assets/theBeerStoreLogo.svg'\n\nconst Logo = () => {\n  return (\n    <div className=\"logo\">\n      <img src={theBeerStoreLogo} alt=\"BeerStore Logo\" />\n    </div>\n  )\n}\n\nexport default Logo;","import React from 'react';\n\nconst NavBar = () => {\n  return (\n    <nav>\n      <ul>\n        {/* remember to change to an Link tag, make it go back to the homepae, but also /typography.scss change <a> */}\n        <li><p>Our Beers</p></li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default NavBar;","import React from 'react';\nimport Logo from './Logo';\nimport NavBar from './NavBar';\n\nconst Header = () => {\n  return (\n    <header>\n      <div className=\"headerContainer wrapper\">\n        <Logo />\n        <NavBar />\n      </div>\n    </header>\n  )\n}\n\nexport default Header;","import React from 'react';\n\nconst PageBanner = () => {\n  return (\n    <div className='pageBanner'>\n      <div className='wrapper'>\n        <div className='breadcrumb'>\n          <p>Home > <span>Our Beers</span></p>\n        </div>\n        <h2>Explore our Beers</h2>\n      </div>\n    </div>\n  )\n}\n\nexport default PageBanner;","export const addDefaultSrc = (e, placeHolderImage) => {\n  e.target.src = placeHolderImage;\n}\n\nexport const toggleClassList = (element, className) => {\n  console.log(element, className)\n  element.classList.toggle(`${className}`)\n}","import React from 'react';\nimport FilterIcon from '../assets/filterIcon.svg';\nimport { toggleClassList } from '../utilityFunctions'\n\nconst ToggleFilter = () => {\n\n  let productList = null\n  let filterSectionContainer = null\n  let filterSection = null\n\n  const handleClick = () => {\n    productList = document.getElementsByClassName('productList')[0]\n    filterSectionContainer = document.getElementsByClassName('filterSection')[0]\n    filterSection = document.querySelector(\".filterSection > div\");\n    toggleClassList(productList, 'onlyDisplayproductList')\n    toggleClassList(filterSectionContainer, 'hideFilter')\n    toggleClassList(filterSection, 'hideFilterDiv')\n  }\n\n\n  return (\n    <div className='toggleFilterContainer'>\n      <button className='filterBtn' onClick={handleClick}>\n        <img src={FilterIcon} alt=\"filter icon\" />\n      </button>\n    </div>\n  )\n}\n\nexport default ToggleFilter;","import React from 'react';\n\nconst SortOptions = (props) => {\n  const handleOnChange = e => {\n    props.handleSortandFilter(e.target.value)\n  }\n\n  return (\n    <div>\n      <form className='sortForm'>\n        <div className='sortOption'>\n          <label htmlFor=\"\"><p>Sort by: </p> </label>\n          <select name=\"\" id=\"\" onChange={handleOnChange}>\n            <option value=\"\" selected disabled hidden>Choose here</option>\n            <option value=\"price sortAscending\">Price: Low to High</option>\n            <option value=\"price sortDecending\">Price: High to Low</option>\n            <option value=\"name sortAscending\">Product Name: A - Z</option>\n            <option value=\"name sortDecending\">Product Name: Z - A</option>\n          </select>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default SortOptions","import React from 'react';\nimport ToggleFilter from './ToggleFilter';\nimport SortOptions from './SortOptions';\n\nconst SortSection = ({ handleSortandFilter }) => {\n  return (\n    <div className='sortSectionContainer'>\n      <div className='wrapper'>\n        <ToggleFilter />\n        <SortOptions handleSortandFilter={handleSortandFilter} />\n      </div>\n    </div>\n  )\n}\n\nexport default SortSection","import React, { Component } from 'react';\nimport searchIcon from '../assets/searchIcon.svg'\nimport { toggleClassList } from '../utilityFunctions'\n\nclass FilterSection extends Component {\n  constructor() {\n    super()\n    this.state = {\n      oldCheckedElement: ''\n    }\n  }\n\n  clearSearchValue = () => {\n    const searchValue = document.getElementById('productSearch')\n    searchValue.value = ''\n  }\n\n  handleChange = (e) => {\n    const userQuery = `checkbox ${e.target.name}`\n    this.props.handleSortandFilter(userQuery)\n    const choosenOption = document.getElementsByName(e.target.name)[0].parentElement.parentElement\n    if (Boolean(this.state.oldCheckedElement)) {\n      toggleClassList(this.state.oldCheckedElement, 'selected')\n    }\n    toggleClassList(choosenOption, 'selected')\n    this.setState({\n      oldCheckedElement: choosenOption\n    })\n    this.clearSearchValue()\n  }\n\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n  }\n\n  handleSearchChange = (e) => {\n    const userQuery = `name ${e.target.value}`\n    this.props.handleSortandFilter(userQuery)\n  }\n\n  render() {\n    return (\n      <div className='filterSection hideFilter'>\n        <div className=\"hideFilterDiv\">\n          <form onSubmit={this.handleSubmit}>\n            <div className='productSearchContainer'>\n              <label htmlFor=\"productSearch\" className='hidden'>Search by name</label>\n              <input type=\"search\" id='productSearch' placeholder='Search Product by Name' onChange={this.handleSearchChange} />\n              <button>\n                <img src={searchIcon} alt=\"search icon\" />\n              </button>\n            </div>\n          </form>\n          <form>\n            <div className='filterCategory'>\n              <h3>Country</h3>\n              <ul className='filterList'>\n                <li className='filterOption'>\n                  <label>\n                    <input name='country Canada' type=\"checkbox\" className='hidden' onChange={this.handleChange} />\n                    Canada\n              </label>\n                </li>\n                <li className='filterOption' >\n                  <label>\n                    <input name='country United States' type=\"checkbox\" className='hidden' onChange={this.handleChange} />\n                    United States\n                  </label>\n                </li>\n                <li className='filterOption'>\n                  <label>\n                    <input name='country Mexico' type=\"checkbox\" className='hidden' onChange={this.handleChange} />\n                    Mexico\n              </label>\n                </li>\n                <li className='filterOption'>\n                  <label>\n                    <input name='country Germany' type=\"checkbox\" className='hidden' onChange={this.handleChange} />\n                    Germany\n              </label>\n                </li>\n                <li className='filterOption'>\n                  <label>\n                    <input name='country Belgium' type=\"checkbox\" className='hidden' onChange={this.handleChange} />\n                    Belgium\n              </label>\n                </li>\n                <li className='filterOption'>\n                  <label>\n                    <input name='country Ireland' type=\"checkbox\" className='hidden' onChange={this.handleChange} />\n                    Ireland\n              </label>\n                </li>\n                <li className='filterOption'>\n                  <label>\n                    <input name='country Denmark' type=\"checkbox\" className='hidden' onChange={this.handleChange} />\n                    Denmark\n              </label>\n                </li>\n              </ul>\n            </div>\n          </form>\n          <form>\n            <div className='filterCategory'>\n              <h3>Beer Type</h3>\n              <ul className='filterList'>\n                <li className='filterOption'>\n                  <label>\n                    <input name='type Malt' type=\"checkbox\" className='hidden' onChange={this.handleChange} />\n                    Malt\n              </label>\n                </li>\n                <li className='filterOption'>\n                  <label>\n                    <input name='type Lager' type=\"checkbox\" className='hidden' onChange={this.handleChange} />\n                    Lager\n              </label>\n                </li>\n                <li className='filterOption'>\n                  <label>\n                    <input name='type Ale' type=\"checkbox\" className='hidden' onChange={this.handleChange} />\n                    Ale\n              </label>\n                </li>\n                <li className='filterOption'>\n                  <label>\n                    <input name='type Flavoured Malt' type=\"checkbox\" className='hidden' onChange={this.handleChange} />\n                    Flavoured Malt\n              </label>\n                </li>\n                <li className='filterOption'>\n                  <label>\n                    <input name='type Porter' type=\"checkbox\" className='hidden' onChange={this.handleChange} />\n                    Porter\n              </label>\n                </li>\n                <li className='filterOption'>\n                  <label>\n                    <input name='type Stout' type=\"checkbox\" className='hidden' onChange={this.handleChange} />\n                    Stout\n              </label>\n                </li>\n              </ul>\n            </div>\n\n          </form>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default FilterSection","import React from 'react';\nimport PlaceHolderImage from '../assets/placeHolderImage.svg'\nimport { addDefaultSrc } from '../utilityFunctions'\n\nconst ProductCard = ({ productInfo, lessDisplayed }) => {\n  return (\n    <li className={'productListItem ' + lessDisplayed}>\n      <div className=\"productImageContainer\" key={productInfo.product_id}>\n        <img onError={(e) => addDefaultSrc(e, PlaceHolderImage)} src={productInfo.image_url} alt={productInfo.name + ' picture'} className=\"primaryProductImage\" />\n      </div>\n      <div className=\"productInfoContainer\">\n        <div className=\"basicProductInfo\">\n          <h2>{productInfo.name}</h2>\n          <p className='productBrewer'>{productInfo.brewer}</p>\n        </div>\n        <div className=\"detailedProductInfo\">\n          <div className=\"typeAndPriceProductInfo\">\n            <p className='productType'>{productInfo.type}</p>\n            <p>$<span className='productPrice'>{productInfo.price}</span></p>\n          </div>\n          <div className=\"sizeAndABVProductInfo\">\n            <p className='productSize'>{productInfo.size}</p>\n            <p className='productABV'>{productInfo.abv}% ABV</p>\n          </div>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default ProductCard","import React, { Component } from 'react';\nimport ProductCard from './ProductCard';\n\n\nclass ProductDisplay extends Component {\n\n  listOfDisplayedProducts = (data) => {\n    return data.map(item =>\n      <ProductCard\n        productInfo={item}\n        lessDisplayed={data.length === 2 ? 'lessDisplayed'\n          : data.length === 1 ? 'lessDisplayed less'\n            : null} />)\n  }\n\n  render() {\n    const { displayedData } = this.props\n    return (\n      <ul id='productList' className='productList onlyDisplayproductList'>\n        {this.listOfDisplayedProducts(displayedData)}\n      </ul>\n    )\n  }\n}\n\nexport default ProductDisplay","import React, { Component } from 'react';\nimport SortSection from './SortSection'\nimport FilterSection from './FilterSection'\nimport ProductDisplay from './ProductDisplay'\n\nclass ProductSection extends Component {\n  constructor() {\n    super()\n    this.state = {\n      originalData: [],\n      refinedData: [],\n      userOrganizedData: [],\n      displayedData: [],\n      indexOfFirstDisplayedProduct: 0,\n      productsPerPage: 9\n    }\n  }\n\n  componentDidMount() {\n    this.getTheBeerStoreData('products')\n      .then(data => {\n        this.setState({\n          originalData: data,\n          refinedData: this.refineTheBeerStoreData(data)\n        }, () => this.updateDisplayedData('reset', this.state.refinedData))\n      })\n  }\n\n  getTheBeerStoreData = async (querySpec) => {\n    const baseUrl = 'http://ontariobeerapi.ca/'\n    const proxy = 'https://cors-anywhere.herokuapp.com/'\n    const response = await fetch(proxy + baseUrl + querySpec);\n    const data = await response.json()\n    return data\n  }\n\n  // Business Decision: To eliminate product repetition and just display the lowest quantity/price\n  refineTheBeerStoreData = (data) => {\n    const refinedData = data.reduce((acc, productInfo) => {\n      const currentBeerId = productInfo.beer_id.toString()\n      if (!(currentBeerId in acc) || (+acc[currentBeerId].price > productInfo.price)) {\n        acc[currentBeerId] = productInfo\n      }\n      return acc\n    }, {})\n    return Object.values(refinedData)\n  }\n\n  handleSortandFilter = (userQuery) => {\n    userQuery.includes('checkbox') || userQuery.includes('name')\n      ? this.updateDisplayedData(userQuery, this.state.refinedData)\n      : this.updateDisplayedData(userQuery, this.state.userOrganizedData)\n  }\n\n  updateDisplayedData = (query, dataSource) => {\n    const dataToDisplay = [...dataSource]\n    let userQuery = query.split(' ')\n    console.log(userQuery)\n    console.log(dataSource)\n    if (userQuery.includes('reset')) {\n      this.resetDisplayedProducts(dataSource)\n    }\n    else if (userQuery.includes('sortAscending')) {\n      const sortedData = this.sortDisplayedDataAscending(userQuery[0], dataToDisplay)\n      this.setUserOrganizedAndDisplayedData(sortedData)\n    }\n    else if (userQuery.includes('sortDecending')) {\n      const sortedData = this.sortDisplayedDataDecending(userQuery[0], dataToDisplay)\n      this.setUserOrganizedAndDisplayedData(sortedData)\n    }\n    else if (userQuery.includes('checkbox')) {\n      const modifiedUserQuery = [userQuery[1], userQuery.slice(2).join(' ')]\n      const filteredData = this.filterDisplayedData(modifiedUserQuery, dataToDisplay)\n      this.setUserOrganizedAndDisplayedData(filteredData)\n    }\n    else if (userQuery.includes('name')) {\n      const searchCategory = userQuery.shift()\n      const searchName = userQuery.join(' ')\n      const searchQuery = [searchCategory, searchName]\n      const filteredData = this.filterDisplayedData(searchQuery, dataToDisplay)\n      console.log(filteredData)\n      this.setUserOrganizedAndDisplayedData(filteredData)\n    }\n  }\n\n  filterDisplayedData = (userQuery, dataSource) => {\n    if (!userQuery.includes('name')) {\n      return dataSource.filter(productInfo => productInfo[userQuery[0]] === userQuery[1])\n    }\n    else {\n      return dataSource.filter(productInfo => {\n        return productInfo[userQuery[0]].toLowerCase().includes(userQuery[1].toLowerCase())\n        // const productName = productInfo[userQuery[0]].toLowerCase()\n        // const userQueryName = userQuery[1].toLowerCase()\n        // return productName.includes(userQueryName)\n      })\n    }\n  }\n\n  resetDisplayedProducts = (dataSource) => {\n    this.setState({\n      indexOfFirstDisplayedProduct: 0\n    }, () => this.setUserOrganizedAndDisplayedData(dataSource))\n  }\n\n  sortDisplayedDataAscending = (query, dataSource) => {\n    if (query === 'name') {\n      return dataSource.sort((a, b) => {\n        const nameA = a[query].toUpperCase()\n        const nameB = b[query].toUpperCase()\n        return nameA < nameB ? -1 : nameA > nameB ? 1 : 0\n      })\n    }\n    return dataSource.sort((a, b) => {\n      return a[query] - b[query]\n    })\n  }\n\n  sortDisplayedDataDecending = (query, dataSource) => {\n    if (query === 'name') {\n      return dataSource.sort((a, b) => {\n        const nameA = a[query].toUpperCase()\n        const nameB = b[query].toUpperCase()\n        return nameA > nameB ? -1 : nameA < nameB ? 1 : 0\n      })\n    }\n    return dataSource.sort((a, b) => {\n      return b[query] - a[query]\n    })\n  }\n\n  setUserOrganizedAndDisplayedData = (data) => {\n    const { indexOfFirstDisplayedProduct, productsPerPage } = this.state\n    this.setState({\n      userOrganizedData: [...data],\n      displayedData: data.slice(indexOfFirstDisplayedProduct, (indexOfFirstDisplayedProduct + productsPerPage))\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <SortSection handleSortandFilter={this.handleSortandFilter} />\n        <div className='productContainerLayout wrapper'>\n          <FilterSection handleSortandFilter={this.handleSortandFilter} />\n          <ProductDisplay displayedData={this.state.displayedData} />\n          {/* {this.state.displayedData.length\n            ? <ProductDisplay displayedData={this.state.displayedData} />\n            : <div>loading</div>} */}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ProductSection","import React, { Component } from 'react';\nimport './App.scss';\nimport Header from './components/Header'\nimport PageBanner from './components/PageBanner'\nimport ProductSection from './components/ProductSection'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className='body'>\n        <Header />\n        <PageBanner />\n        <ProductSection />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}